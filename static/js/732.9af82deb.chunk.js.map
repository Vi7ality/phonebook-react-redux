{"version":3,"file":"static/js/732.9af82deb.chunk.js","mappings":"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","sources":["redux/selectors.js","components/Contacts/Contacts.styled.js","components/Contacts/Contacts.jsx","components/ContactForm/Form.styled.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.styled.js","components/Filter/Filter.jsx","pages/Phonebook/Phonebook.styled.js","pages/Phonebook/Phonebook.jsx"],"sourcesContent":["import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectContacts = state => state.contacts.data;\n\nexport const selectFilterQuery = state => state.filterQuery;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectStatusFilter = state => state.filters.status;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContacts, selectFilterQuery],\n  (contacts, filterQuery) => {\n    const normalizedFilterQuery = filterQuery.toLowerCase();\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(normalizedFilterQuery)\n    );\n  }\n);\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  list-style: none;\n  padding-left: 10px;\n\n  font-size: 20px;\n`;\n\nexport const ContactsItem = styled.li`\n  display: flex;\n  align-items: center;\n`;\n\nexport const ContactName = styled.p`\n  margin-right: 15px;\n`;\n\nexport const ContactNumber = styled.a`\n  text-decoration: none;\n  margin-right: 10px;\n`;\n\nexport const DeleteBtn = styled.button`\n  color: red;\n  background: transparent;\n  border: 1px grey solid;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact } from 'redux/operations';\nimport { selectVisibleContacts } from 'redux/selectors';\nimport {\n  ContactName,\n  ContactNumber,\n  ContactsItem,\n  ContactsList,\n  DeleteBtn,\n} from './Contacts.styled';\n\nexport function Contacts() {\n  const dispatch = useDispatch();\n\n  const visibleContacts = useSelector(selectVisibleContacts);\n\n  return (\n    <div>\n      <ContactsList>\n        {visibleContacts.map(({ id, name, number }) => {\n          return (\n            <ContactsItem key={id}>\n              <ContactName>{name}:</ContactName>\n              <ContactNumber href={`tel: ${number}`}>{number}</ContactNumber>\n              <DeleteBtn\n                type=\"button\"\n                onClick={() => {\n                  dispatch(deleteContact(id));\n                }}\n              >\n                Delete\n              </DeleteBtn>\n            </ContactsItem>\n          );\n        })}\n      </ContactsList>\n    </div>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  border: 1px solid black;\n  padding: 20px 40px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 20px;\n`;\n\nexport const LabelText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n`;\n\nexport const FormInput = styled.input`\n  margin-top: 0;\n  margin-bottom: 10px;\n  width: 300px;\n  height: 20px;\n`;\nexport const FormButton = styled.button`\n  width: 200px;\n  height: 40px;\n\n  font-size: 16px;\n  font-weight: 500;\n\n  background-color: white;\n  color: black;\n  border-radius: 5px;\n\n  &:hover {\n    background-color: green;\n    color: white;\n  }\n`;\n","import { useState } from 'react';\n\nimport { Form, FormButton, FormInput, Label, LabelText } from './Form.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectContacts } from 'redux/selectors';\nimport Notiflix from 'notiflix';\nimport { addContact } from 'redux/operations';\n\nexport function ContactForm() {\n\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n    const dispatch = useDispatch();\n\n  const handleChange = event => {\n    const { name, value } = event.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break\n      case 'number':\n        setNumber(value);\n        break\n      default:\n        return\n    }\n\n  };\n\n  const onSubmit = event => {\n    event.preventDefault();\n        if (\n      contacts.find(\n        contact => contact.name.toLowerCase() === name.toLowerCase()\n      )\n    ) {\n      Notiflix.Notify.failure(`${name} is already exist in your contacts`);\n      return;\n    }\n    dispatch(addContact({name, number}));\n    reset();\n  };\n\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n    return (\n      <Form onSubmit={onSubmit}>\n        <Label>\n          <LabelText>Name</LabelText>\n          <FormInput\n            type=\"text\"\n            name=\"name\"\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n            title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n            required\n            value={name}\n            onChange={handleChange}\n          />\n        </Label>\n        <Label> <LabelText>Number</LabelText>\n          <FormInput\n            type=\"tel\"\n            name=\"number\"\n            pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n            title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n            required\n            value={number}\n            onChange={handleChange}\n          />\n        </Label>\n        <FormButton type=\"submit\">Add contact</FormButton>\n      </Form>\n    );\n  }\n","import styled from '@emotion/styled';\n\nexport const FilterLabelText = styled.p`\n  font-size: 20px;\n  font-weight: 600;\n  margin: 0;\n`;\n\nexport const FilterInput = styled.input`\n  margin-top: 0;\n  margin-bottom: 10px;\n  width: 300px;\n  height: 20px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { setFilter } from 'redux/filterSlice';\nimport { selectFilterQuery } from 'redux/selectors';\nimport { FilterInput, FilterLabelText } from './Filter.styled';\n\nexport function Filter() {\n  const dispatch = useDispatch();\n  const value = useSelector(selectFilterQuery);\n\n  const filterChange = event => {\n    dispatch(setFilter(event.currentTarget.value));\n  };\n  return (\n    <label>\n      <FilterLabelText>Find contacts by name</FilterLabelText>\n      <FilterInput\n        type=\"text\"\n        name=\"filter\"\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        value={value}\n        onChange={filterChange}\n      />\n    </label>\n  );\n}\n","import styled from '@emotion/styled';\n\nexport const PhonebookStyle = styled.div`\n  display: flex;\n`;\n\nexport const Title = styled.h2`\n  font-size: 42px;\n`;\n\nexport const ContactsPart = styled.div`\n  padding-left: 50px;\n`;\n","import { Contacts } from 'components/Contacts/Contacts';\nimport { ContactForm } from 'components/ContactForm/ContactForm';\nimport { Filter } from 'components/Filter/Filter';\nimport { ContactsPart, PhonebookStyle, Title } from './Phonebook.styled';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { selectError, selectIsLoading } from 'redux/selectors';\nimport { useEffect } from 'react';\nimport { fetchContacts } from 'redux/operations';\n\n function Phonebook() {\n  const dispatch = useDispatch();\n\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  return (\n    <PhonebookStyle>\n      <div>\n        <Title>Phonebook</Title>\n        <ContactForm></ContactForm>\n      </div>\n      <ContactsPart>\n        <Title>Contacts</Title>\n        <Filter></Filter>\n        <Contacts></Contacts>\n        {isLoading && !error && <p>Loading...</p>}\n      </ContactsPart>\n\n    </PhonebookStyle>\n  );\n}\n\nexport default Phonebook;\n"],"names":["selectContacts","state","contacts","data","selectFilterQuery","filterQuery","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","normalizedFilterQuery","toLowerCase","filter","contact","name","includes","ContactsList","styled","ContactsItem","ContactName","ContactNumber","DeleteBtn","Contacts","dispatch","useDispatch","visibleContacts","useSelector","map","id","number","href","type","onClick","deleteContact","Form","Label","LabelText","FormInput","FormButton","ContactForm","useState","setName","setNumber","handleChange","event","currentTarget","value","reset","onSubmit","preventDefault","find","Notiflix","addContact","pattern","title","required","onChange","FilterLabelText","FilterInput","Filter","setFilter","PhonebookStyle","Title","ContactsPart","useEffect","fetchContacts"],"sourceRoot":""}